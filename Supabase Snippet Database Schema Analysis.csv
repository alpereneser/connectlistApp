schemaname,tablename,policyname,permissive,roles,cmd,qual,with_check
public,account_deletion_requests,Users can create deletion requests,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,account_deletion_requests,Users can update own deletion requests,PERMISSIVE,{public},UPDATE,((auth.uid() = user_id) AND (status = 'pending'::text)),null
public,account_deletion_requests,Users can view own deletion requests,PERMISSIVE,{public},SELECT,(auth.uid() = user_id),null
public,categories,Categories are viewable by everyone,PERMISSIVE,{public},SELECT,true,null
public,comments,Anyone can view non-deleted comments,PERMISSIVE,{public},SELECT,(NOT is_deleted),null
public,comments,Users can create their own comments,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,comments,Users can soft delete their own comments,PERMISSIVE,{public},UPDATE,(auth.uid() = user_id),(is_deleted = true)
public,comments,Users can update their own comments,PERMISSIVE,{public},UPDATE,(auth.uid() = user_id),null
public,conversation_participants,Users can join conversations,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,conversation_participants,Users can view conversation participants,PERMISSIVE,{public},SELECT,"((user_id = auth.uid()) OR (EXISTS ( SELECT 1
   FROM conversation_participants cp
  WHERE ((cp.conversation_id = conversation_participants.conversation_id) AND (cp.user_id = auth.uid())))))",null
public,conversation_participants,Users can view participants of their conversations,PERMISSIVE,{public},SELECT,"(conversation_id IN ( SELECT conversation_participants_1.conversation_id
   FROM conversation_participants conversation_participants_1
  WHERE (conversation_participants_1.user_id = auth.uid())))",null
public,conversations,Users can create conversations,PERMISSIVE,{public},INSERT,null,true
public,conversations,Users can view conversations they participate in,PERMISSIVE,{public},SELECT,"(id IN ( SELECT conversation_participants.conversation_id
   FROM conversation_participants
  WHERE (conversation_participants.user_id = auth.uid())))",null
public,conversations,Users can view their conversations_access,PERMISSIVE,{public},SELECT,"(EXISTS ( SELECT 1
   FROM conversation_participants cp
  WHERE ((cp.conversation_id = conversations.id) AND (cp.user_id = auth.uid()))))",null
public,follows,Anyone can view follows,PERMISSIVE,{public},SELECT,true,null
public,follows,Users can follow others,PERMISSIVE,{public},INSERT,null,(auth.uid() = follower_id)
public,follows,Users can unfollow,PERMISSIVE,{public},DELETE,(auth.uid() = follower_id),null
public,list_comments,Comments are viewable by everyone,PERMISSIVE,{public},SELECT,true,null
public,list_comments,Users can create comments,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,list_comments,Users can delete own comments,PERMISSIVE,{public},DELETE,(auth.uid() = user_id),null
public,list_comments,Users can update own comments,PERMISSIVE,{public},UPDATE,(auth.uid() = user_id),null
public,list_follows,Users can delete their own list follows,PERMISSIVE,{public},DELETE,(auth.uid() = user_id),null
public,list_follows,Users can insert their own list follows,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,list_follows,Users can view their own list follows,PERMISSIVE,{public},SELECT,(auth.uid() = user_id),null
public,list_items,List items viewable if list is viewable,PERMISSIVE,{public},SELECT,"(EXISTS ( SELECT 1
   FROM lists
  WHERE ((lists.id = list_items.list_id) AND ((lists.privacy = 'public'::text) OR (lists.creator_id = auth.uid())))))",null
public,list_items,Users can manage items in own lists,PERMISSIVE,{public},ALL,"(EXISTS ( SELECT 1
   FROM lists
  WHERE ((lists.id = list_items.list_id) AND (lists.creator_id = auth.uid()))))",null
public,list_likes,Anyone can view likes,PERMISSIVE,{public},SELECT,true,null
public,list_likes,Likes are viewable by everyone,PERMISSIVE,{public},SELECT,true,null
public,list_likes,Users can like lists,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,list_likes,Users can remove their own likes,PERMISSIVE,{public},DELETE,(auth.uid() = user_id),null
public,list_likes,Users can unlike lists,PERMISSIVE,{public},DELETE,(auth.uid() = user_id),null
public,list_shares,Anyone can view share history,PERMISSIVE,{public},SELECT,true,null
public,list_shares,Authenticated users can create share records,PERMISSIVE,{public},INSERT,null,(auth.uid() IS NOT NULL)
public,list_shares,Authenticated users can share lists,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,list_shares,Shares are viewable by everyone,PERMISSIVE,{public},SELECT,true,null
public,list_shares,Users can create shares,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,list_shares,Users can delete own shares,PERMISSIVE,{public},DELETE,(auth.uid() = user_id),null
public,list_shares,Users can view list shares,PERMISSIVE,{public},SELECT,true,null
public,list_views,Anyone can create views,PERMISSIVE,{public},INSERT,null,true
public,list_views,Anyone can view list views,PERMISSIVE,{public},SELECT,true,null
public,list_views,Authenticated users can track views,PERMISSIVE,{public},INSERT,null,((auth.uid() = user_id) OR (auth.uid() IS NOT NULL))
public,list_views,Views are viewable by list owners,PERMISSIVE,{public},SELECT,"(EXISTS ( SELECT 1
   FROM lists
  WHERE ((lists.id = list_views.list_id) AND (lists.creator_id = auth.uid()))))",null
public,lists,Public lists are viewable by everyone,PERMISSIVE,{public},SELECT,((privacy = 'public'::text) OR (creator_id = auth.uid())),null
public,lists,Users can create lists,PERMISSIVE,{public},INSERT,null,(auth.uid() = creator_id)
public,lists,Users can delete own lists,PERMISSIVE,{public},DELETE,(auth.uid() = creator_id),null
public,lists,Users can update own lists,PERMISSIVE,{public},UPDATE,(auth.uid() = creator_id),null
public,messages,Users can send messages,PERMISSIVE,{public},INSERT,null,"((auth.uid() = sender_id) AND (EXISTS ( SELECT 1
   FROM conversation_participants cp
  WHERE ((cp.conversation_id = cp.conversation_id) AND (cp.user_id = auth.uid())))))"
public,messages,Users can send messages to their conversations,PERMISSIVE,{public},INSERT,null,"((sender_id = auth.uid()) AND (conversation_id IN ( SELECT conversation_participants.conversation_id
   FROM conversation_participants
  WHERE (conversation_participants.user_id = auth.uid()))))"
public,messages,Users can update their messages,PERMISSIVE,{public},UPDATE,(auth.uid() = sender_id),(auth.uid() = sender_id)
public,messages,Users can update their own messages,PERMISSIVE,{public},UPDATE,(sender_id = auth.uid()),null
public,messages,Users can view messages in their conversations,PERMISSIVE,{public},SELECT,"(conversation_id IN ( SELECT conversation_participants.conversation_id
   FROM conversation_participants
  WHERE (conversation_participants.user_id = auth.uid())))",null
public,messages,Users can view their conversations,PERMISSIVE,{public},SELECT,"(EXISTS ( SELECT 1
   FROM conversation_participants cp
  WHERE ((cp.conversation_id = messages.conversation_id) AND (cp.user_id = auth.uid()))))",null
public,notification_logs,Only authenticated users can view notification logs,PERMISSIVE,{public},SELECT,(auth.uid() IS NOT NULL),null
public,notifications,System can create notifications,PERMISSIVE,{public},INSERT,null,true
public,notifications,System can insert notifications,PERMISSIVE,{public},INSERT,null,true
public,notifications,Users can delete their notifications,PERMISSIVE,{public},DELETE,(auth.uid() = user_id),null
public,notifications,Users can update their notifications,PERMISSIVE,{public},UPDATE,(auth.uid() = user_id),null
public,notifications,Users can update their own notifications,PERMISSIVE,{public},UPDATE,(auth.uid() = user_id),null
public,notifications,Users can view their own notifications,PERMISSIVE,{public},SELECT,(auth.uid() = user_id),null
public,support_tickets,Users can create support tickets,PERMISSIVE,{public},INSERT,null,true
public,support_tickets,Users can update own support tickets,PERMISSIVE,{public},UPDATE,(auth.uid() = user_id),null
public,support_tickets,Users can view own support tickets,PERMISSIVE,{public},SELECT,(auth.uid() = user_id),null
public,typing_indicators,Users can delete their own typing indicators,PERMISSIVE,{public},DELETE,(auth.uid() = user_id),null
public,typing_indicators,Users can insert their own typing indicators,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,typing_indicators,Users can view typing indicators in their conversations,PERMISSIVE,{public},SELECT,"(EXISTS ( SELECT 1
   FROM conversation_participants cp
  WHERE ((cp.conversation_id = typing_indicators.conversation_id) AND (cp.user_id = auth.uid()))))",null
public,user_activities,Users can insert their own activities,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,user_activities,Users can view their own activities,PERMISSIVE,{public},SELECT,(auth.uid() = user_id),null
public,user_follows,Follows are viewable by everyone,PERMISSIVE,{public},SELECT,true,null
public,user_follows,Users can delete follows,PERMISSIVE,{public},DELETE,(auth.uid() = follower_id),null
public,user_follows,Users can follow others,PERMISSIVE,{public},INSERT,null,(auth.uid() = follower_id)
public,user_follows,Users can insert follows,PERMISSIVE,{public},INSERT,null,(auth.uid() = follower_id)
public,user_follows,Users can unfollow others,PERMISSIVE,{public},DELETE,(auth.uid() = follower_id),null
public,user_follows,Users can view follows,PERMISSIVE,{public},SELECT,true,null
public,user_notification_settings,Users can insert own notification settings,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,user_notification_settings,Users can update own notification settings,PERMISSIVE,{public},UPDATE,(auth.uid() = user_id),null
public,user_notification_settings,Users can view own notification settings,PERMISSIVE,{public},SELECT,(auth.uid() = user_id),null
public,user_presence,Users can insert their own presence,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,user_presence,Users can update their own presence status,PERMISSIVE,{public},UPDATE,(auth.uid() = user_id),null
public,user_presence,Users can view all presence,PERMISSIVE,{public},SELECT,true,null
public,user_privacy_settings,Users can insert own privacy settings,PERMISSIVE,{public},INSERT,null,(auth.uid() = user_id)
public,user_privacy_settings,Users can update own privacy settings,PERMISSIVE,{public},UPDATE,(auth.uid() = user_id),null
public,user_privacy_settings,Users can view own privacy settings,PERMISSIVE,{public},SELECT,(auth.uid() = user_id),null
public,user_recommendations,Users can view their recommendations,PERMISSIVE,{public},SELECT,(auth.uid() = user_id),null
public,users_profiles,Public profiles are viewable by everyone,PERMISSIVE,{public},SELECT,true,null
public,users_profiles,Users can insert own profile,PERMISSIVE,{public},INSERT,null,(auth.uid() = id)
public,users_profiles,Users can update own profile,PERMISSIVE,{public},UPDATE,(auth.uid() = id),null